{"version":3,"file":"index.js","names":["Object","defineProperty","exports","value","default","_common","_interopRequireDefault","require","obj","__esModule","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","report","context","_options","length","Syntax","RuleError","getSource","Code","Str","node","text","result","common","diffs","forEach","diff","ruleError","expected","index","test","indexOfBugs","search","_default","linter","fixer"],"sources":["../src/index.ts"],"sourcesContent":["\"use strict\";\nimport common from \"./common\";\nimport { TextlintRuleModule, TextlintRuleReporter } from \"@textlint/types\";\n\nconst report: TextlintRuleReporter = function (context, _options = {}) {\n    const { Syntax, RuleError, report, getSource } = context;\n    return {\n        // async test\n        async [Syntax.Code]() {\n            return null;\n        },\n        [Syntax.Str](node) {\n            // \"Str\" node\n            const text = getSource(node);\n            // check prh\n            const result = common(text);\n            if (result.diffs.length > 0) {\n                result.diffs.forEach((diff) => {\n                    const ruleError = new RuleError(\"Found \" + diff.expected + \"!\", {\n                        index: diff.index // padding of index\n                    });\n                    report(node, ruleError);\n                });\n            }\n            // check inline\n            if (/bugs/.test(text)) {\n                const indexOfBugs = text.search(/bugs/);\n                const ruleError = new RuleError(\"Found bugs.\", {\n                    index: indexOfBugs // padding of index\n                });\n                report(node, ruleError);\n            }\n        }\n    };\n};\nexport default {\n    linter: report,\n    fixer: report\n} as TextlintRuleModule;\n"],"mappings":"AAAA,YAAY;;AAACA,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,KAAA;AAAA;AAAAD,OAAA,CAAAE,OAAA;AACb,IAAAC,OAAA,GAAAC,sBAAA,CAAAC,OAAA;AAA8B,SAAAD,uBAAAE,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAJ,OAAA,EAAAI,GAAA;AAAA,SAAAE,mBAAAC,GAAA,EAAAC,OAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,MAAA,EAAAC,GAAA,EAAAC,GAAA,cAAAC,IAAA,GAAAP,GAAA,CAAAK,GAAA,EAAAC,GAAA,OAAAd,KAAA,GAAAe,IAAA,CAAAf,KAAA,WAAAgB,KAAA,IAAAN,MAAA,CAAAM,KAAA,iBAAAD,IAAA,CAAAE,IAAA,IAAAR,OAAA,CAAAT,KAAA,YAAAkB,OAAA,CAAAT,OAAA,CAAAT,KAAA,EAAAmB,IAAA,CAAAR,KAAA,EAAAC,MAAA;AAAA,SAAAQ,kBAAAC,EAAA,6BAAAC,IAAA,SAAAC,IAAA,GAAAC,SAAA,aAAAN,OAAA,WAAAT,OAAA,EAAAC,MAAA,QAAAF,GAAA,GAAAa,EAAA,CAAAI,KAAA,CAAAH,IAAA,EAAAC,IAAA,YAAAZ,MAAAX,KAAA,IAAAO,kBAAA,CAAAC,GAAA,EAAAC,OAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,MAAA,UAAAZ,KAAA,cAAAY,OAAAc,GAAA,IAAAnB,kBAAA,CAAAC,GAAA,EAAAC,OAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,MAAA,WAAAc,GAAA,KAAAf,KAAA,CAAAgB,SAAA;AAG9B,IAAMC,MAA4B,GAAG,SAAAA,OAAUC,OAAO,EAAiB;EAAA,IAAfC,QAAQ,GAAAN,SAAA,CAAAO,MAAA,QAAAP,SAAA,QAAAG,SAAA,GAAAH,SAAA,MAAG,CAAC,CAAC;EACjE,IAAM;IAAEQ,MAAM;IAAEC,SAAS;IAAEL,MAAM;IAAEM;EAAU,CAAC,GAAGL,OAAO;EACxD,OAAO;IACH;IACA,CAAOG,MAAM,CAACG,IAAI,IAAI;MAAA,OAAAf,iBAAA;QAClB,OAAO,IAAI;MAAC;IAChB,CAAC;IACD,CAACY,MAAM,CAACI,GAAG,EAAEC,IAAI,EAAE;MACf;MACA,IAAMC,IAAI,GAAGJ,SAAS,CAACG,IAAI,CAAC;MAC5B;MACA,IAAME,MAAM,GAAG,IAAAC,eAAM,EAACF,IAAI,CAAC;MAC3B,IAAIC,MAAM,CAACE,KAAK,CAACV,MAAM,GAAG,CAAC,EAAE;QACzBQ,MAAM,CAACE,KAAK,CAACC,OAAO,CAAEC,IAAI,IAAK;UAC3B,IAAMC,SAAS,GAAG,IAAIX,SAAS,CAAC,QAAQ,GAAGU,IAAI,CAACE,QAAQ,GAAG,GAAG,EAAE;YAC5DC,KAAK,EAAEH,IAAI,CAACG,KAAK,CAAC;UACtB,CAAC,CAAC;UACFlB,MAAM,CAACS,IAAI,EAAEO,SAAS,CAAC;QAC3B,CAAC,CAAC;MACN;MACA;MACA,IAAI,MAAM,CAACG,IAAI,CAACT,IAAI,CAAC,EAAE;QACnB,IAAMU,WAAW,GAAGV,IAAI,CAACW,MAAM,CAAC,MAAM,CAAC;QACvC,IAAML,SAAS,GAAG,IAAIX,SAAS,CAAC,aAAa,EAAE;UAC3Ca,KAAK,EAAEE,WAAW,CAAC;QACvB,CAAC,CAAC;QACFpB,MAAM,CAACS,IAAI,EAAEO,SAAS,CAAC;MAC3B;IACJ;EACJ,CAAC;AACL,CAAC;AAAC,IAAAM,QAAA,GAAAnD,OAAA,CAAAE,OAAA,GACa;EACXkD,MAAM,EAAEvB,MAAM;EACdwB,KAAK,EAAExB;AACX,CAAC"}