{"version":3,"file":"index.js","names":["_common","_interopRequireDefault","require","obj","__esModule","default","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","_default","context","options","length","Syntax","RuleError","report","getSource","Code","node","Str","text","result","common","diffs","forEach","diff","ruleError","concat","expected","index","test","indexOfBugs","search"],"sources":["../src/index.js"],"sourcesContent":["import common from \"./common\";\nexport default function (context, options = {}) {\n    const { Syntax, RuleError, report, getSource } = context;\n    return {\n        // async test\n        async [Syntax.Code](node) {\n            return null;\n        },\n        [Syntax.Str](node) {\n            // \"Str\" node\n            const text = getSource(node);\n            // check prh\n            const result = common(text);\n            if (result.diffs.length > 0) {\n                result.diffs.forEach((diff) => {\n                    const ruleError = new RuleError(`Found ${diff.expected}!`, {\n                        index: diff.index // padding of index\n                    });\n                    report(node, ruleError);\n                });\n            }\n            // check inline\n            if (/bugs/.test(text)) {\n                const indexOfBugs = text.search(/bugs/);\n                const ruleError = new RuleError(\"Found bugs.\", {\n                    index: indexOfBugs // padding of index\n                });\n                report(node, ruleError);\n            }\n        }\n    };\n}\n"],"mappings":";;;;;;AAAA,IAAAA,OAAA,GAAAC,sBAAA,CAAAC,OAAA;AAA8B,SAAAD,uBAAAE,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAAA,SAAAG,mBAAAC,GAAA,EAAAC,OAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,MAAA,EAAAC,GAAA,EAAAC,GAAA,cAAAC,IAAA,GAAAP,GAAA,CAAAK,GAAA,EAAAC,GAAA,OAAAE,KAAA,GAAAD,IAAA,CAAAC,KAAA,WAAAC,KAAA,IAAAP,MAAA,CAAAO,KAAA,iBAAAF,IAAA,CAAAG,IAAA,IAAAT,OAAA,CAAAO,KAAA,YAAAG,OAAA,CAAAV,OAAA,CAAAO,KAAA,EAAAI,IAAA,CAAAT,KAAA,EAAAC,MAAA;AAAA,SAAAS,kBAAAC,EAAA,6BAAAC,IAAA,SAAAC,IAAA,GAAAC,SAAA,aAAAN,OAAA,WAAAV,OAAA,EAAAC,MAAA,QAAAF,GAAA,GAAAc,EAAA,CAAAI,KAAA,CAAAH,IAAA,EAAAC,IAAA,YAAAb,MAAAK,KAAA,IAAAT,kBAAA,CAAAC,GAAA,EAAAC,OAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,MAAA,UAAAI,KAAA,cAAAJ,OAAAe,GAAA,IAAApB,kBAAA,CAAAC,GAAA,EAAAC,OAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,MAAA,WAAAe,GAAA,KAAAhB,KAAA,CAAAiB,SAAA;AACf,SAAAC,SAAUC,OAAO,EAAgB;EAAA,IAAdC,OAAO,GAAAN,SAAA,CAAAO,MAAA,QAAAP,SAAA,QAAAG,SAAA,GAAAH,SAAA,MAAG,CAAC,CAAC;EAC1C,IAAM;IAAEQ,MAAM;IAAEC,SAAS;IAAEC,MAAM;IAAEC;EAAU,CAAC,GAAGN,OAAO;EACxD,OAAO;IACH;IACA,CAAOG,MAAM,CAACI,IAAI,EAAEC,IAAI,EAAE;MAAA,OAAAjB,iBAAA;QACtB,OAAO,IAAI;MAAC;IAChB,CAAC;IACD,CAACY,MAAM,CAACM,GAAG,EAAED,IAAI,EAAE;MACf;MACA,IAAME,IAAI,GAAGJ,SAAS,CAACE,IAAI,CAAC;MAC5B;MACA,IAAMG,MAAM,GAAG,IAAAC,eAAM,EAACF,IAAI,CAAC;MAC3B,IAAIC,MAAM,CAACE,KAAK,CAACX,MAAM,GAAG,CAAC,EAAE;QACzBS,MAAM,CAACE,KAAK,CAACC,OAAO,CAAEC,IAAI,IAAK;UAC3B,IAAMC,SAAS,GAAG,IAAIZ,SAAS,UAAAa,MAAA,CAAUF,IAAI,CAACG,QAAQ,QAAK;YACvDC,KAAK,EAAEJ,IAAI,CAACI,KAAK,CAAC;UACtB,CAAC,CAAC;UACFd,MAAM,CAACG,IAAI,EAAEQ,SAAS,CAAC;QAC3B,CAAC,CAAC;MACN;MACA;MACA,IAAI,MAAM,CAACI,IAAI,CAACV,IAAI,CAAC,EAAE;QACnB,IAAMW,WAAW,GAAGX,IAAI,CAACY,MAAM,CAAC,MAAM,CAAC;QACvC,IAAMN,SAAS,GAAG,IAAIZ,SAAS,CAAC,aAAa,EAAE;UAC3Ce,KAAK,EAAEE,WAAW,CAAC;QACvB,CAAC,CAAC;QACFhB,MAAM,CAACG,IAAI,EAAEQ,SAAS,CAAC;MAC3B;IACJ;EACJ,CAAC;AACL"}